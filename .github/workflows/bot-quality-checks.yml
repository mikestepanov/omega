name: Bot Quality Checks

on:
  push:
    branches:
      - '**'  # Run on all branches
    paths:
      - 'bots/**/*.js'
      - 'bots/**/*.json'
      - 'bots/**/*.md'
  workflow_dispatch:

jobs:
  quality-checks:
    name: Code Quality & Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        working-directory: ./bots
        run: npm install

      - name: Check for sensitive data
        run: |
          echo "Checking for exposed API keys..."
          if grep -r "AGENTSMITH_API_KEY=" bots/ --include="*.js" --exclude-dir=node_modules | grep -v "test-api-key" | grep -v "process.env"; then
            echo "‚ùå Found exposed API keys!"
            exit 1
          fi
          echo "‚úÖ No exposed API keys found"

      - name: Run tests
        working-directory: ./bots
        run: npm test
        env:
          NODE_ENV: test

      - name: Generate test report
        if: always()
        working-directory: ./bots
        run: |
          npm run test:coverage -- --json --outputFile=test-results.json || true
          
      - name: Comment test results on PR
        if: github.event_name == 'pull_request' && always()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            let comment = '## üß™ Bot Test Results\n\n';
            
            try {
              const results = JSON.parse(fs.readFileSync('./bots/test-results.json', 'utf8'));
              const { numTotalTests, numPassedTests, numFailedTests } = results;
              
              if (numFailedTests === 0) {
                comment += `‚úÖ All ${numTotalTests} tests passed!\n\n`;
              } else {
                comment += `‚ùå ${numFailedTests} of ${numTotalTests} tests failed.\n\n`;
              }
              
              // Add coverage if available
              if (results.coverageMap) {
                comment += '### Coverage Summary\n';
                comment += '| File | Coverage |\n';
                comment += '|------|----------|\n';
                // Add coverage details here
              }
            } catch (e) {
              comment += '‚ö†Ô∏è Could not parse test results.\n';
            }
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  critical-path-tests:
    name: Critical Path Tests
    runs-on: ubuntu-latest
    needs: quality-checks
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        working-directory: ./bots
        run: npm install

      - name: Test Monday reminder date calculation
        working-directory: ./bots
        run: |
          echo "Testing critical Monday reminder functionality..."
          npm test -- --testNamePattern="should identify last day of period correctly"

      - name: Test retry mechanism
        working-directory: ./bots
        run: |
          echo "Testing resilient sender retry logic..."
          npm test -- --testNamePattern="should retry on failure and succeed"

      - name: Integration smoke test
        working-directory: ./bots
        run: |
          echo "Running integration smoke test..."
          npm test -- --testPathPattern="integration" --testNamePattern="should send Monday reminders on the last day"