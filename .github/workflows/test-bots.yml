name: Tests

on:
  push:
    branches: ['**']
  pull_request:
    branches: [main, dev]

jobs:
  test:
    name: Run Bot Tests
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./bots

    strategy:
      matrix:
        node-version: [22.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install

      - name: Run linter (if exists)
        run: npm run lint --if-present

      - name: Run tests
        run: npm test
        env:
          NODE_ENV: test
          CI: true

      - name: Run tests with coverage
        run: npm run test:coverage || true
        env:
          NODE_ENV: test
          CI: true

      - name: Run specific test suites
        run: |
          echo "Running pay period calculator tests..."
          npm run test:pay-period || true
          echo "Running unit tests..."
          npm run test:unit || true
        env:
          NODE_ENV: test
          CI: true

      # Coverage disabled until more tests are added
      # - name: Run tests with coverage
      #   run: npm run test:coverage
      #   env:
      #     NODE_ENV: test
      #     CI: true

      # Coverage steps disabled until more tests are added
      # - name: Upload coverage to Codecov
      #   uses: codecov/codecov-action@v3
      #   with:
      #     directory: ./bots/coverage
      #     flags: bots
      #     name: bots-coverage
      #     fail_ci_if_error: false

  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: test
    if: always()
    
    steps:
      - name: Check test results
        run: |
          if [ "${{ needs.test.result }}" == "success" ]; then
            echo "✅ All bot tests passed!"
          else
            echo "❌ Bot tests failed!"
            exit 1
          fi